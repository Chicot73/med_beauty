var alert=document.querySelector(".hero__alert"),body=document.body||document.getElementsByTagName("body")[0];function alertStart(){alert.setAttribute("id","alert_start"),body.style.overflow="hidden"}var header=document.querySelector(".header");function headerSticky(){setTimeout(function(){header.setAttribute("id","acthead")},1e3)}function animateHero(){var e=document.querySelector(".hero__module01"),t=document.querySelector(".hero__module02"),n=document.querySelector(".hero__module03"),o=document.querySelector(".hero__module04"),r=document.querySelector(".hero__bigobj"),l=document.querySelector(".hero__fog"),c=document.querySelector(".hero__blur");e.setAttribute("id","module01"),t.setAttribute("id","module02"),n.setAttribute("id","module03"),o.setAttribute("id","module04"),r.setAttribute("id","bigdevice"),l.setAttribute("id","fog"),c.setAttribute("id","blur")}function alertFinish(e){var t=e.target.closest("#sub"),e=e.target.closest("#unsub");(t||e)&&(alert.removeAttribute("id","alert_start"),animateHero(),document.removeEventListener("scroll",alertStart),body.style.overflow="scroll",headerSticky())}document.addEventListener("click",alertFinish),document.addEventListener("scroll",alertStart);var langwRandome=document.querySelector(".header__chose-lang"),randomePot=document.querySelector(".header__randome"),langwText=langwRandome.firstElementChild,counter=0;function inn(){randomePot.setAttribute("id","list-start")}function listener(e){var t,n,e=e.target;e&&(t=n=e.textContent,n=langwText.textContent,langwText.textContent=t,e.textContent=n,setTimeout(function(){randomePot.removeAttribute("id","list-start")},200))}langwRandome.addEventListener("mouseover",inn),langwRandome.addEventListener("click",inn),randomePot.addEventListener("mouseout",function(){randomePot.removeAttribute("id","list-start")});var count,accordeon=document.querySelector(".questions__part2"),tab=document.querySelectorAll(".questions__block"),button=document.querySelectorAll(".questions__toform"),arrows=document.querySelectorAll(".questions__toform");function click1(e){var n=e.target.closest(".questions__block");n&&tab.forEach(function(e){var t=e.firstElementChild.lastElementChild;e===n&&(e.classList.contains("mark")?1==count?(t.removeAttribute("id","block-act--in"),t.setAttribute("id","block-act--out"),e.lastElementChild.style.transform="rotate(0deg)translate(0, -50%)",e.lastElementChild.style.top="50%",count++):2==count&&(t.removeAttribute("id","block-act--out"),t.setAttribute("id","block-act--in"),e.lastElementChild.style.transform="rotate(180deg)translate(0, 0)",e.lastElementChild.style.top="30px",count--):(t.setAttribute("id","block-act--in"),count=0,count++,e.classList.add("mark"),e.lastElementChild.style.transform="rotate(180deg)translate(0, 0)",e.lastElementChild.style.top="30px"))})}accordeon.addEventListener("click",function(e){click1(e)}),document.addEventListener("DOMContentLoaded",function(){var t,e=document.createElement("script"),n=(e.src="https://www.youtube.com/iframe_api",document.getElementsByTagName("script")[0]),e=(n.parentNode.insertBefore(e,n),document.getElementById("vcross1")),o=document.getElementById("vframe1"),r=document.querySelector(".cover"),l=document.querySelector(".video__link"),c=document.querySelector("body");l.addEventListener("click",function(e){o.classList.add("active"),r.classList.add("active"),c.style.overflow="hidden",t=new YT.Player("player",{height:"1080",width:"100%",videoId:l.dataset.video,playerVars:{autoplay:1,controls:1},events:{onReady:function(e){e.target.setVolume(30),e.target.playVideo(),e.target.setPlaybackQuality("highres")},onStateChange:function(e){e.data==YT.PlayerState.BUFFERING&&e.target.setPlaybackQuality("highres")}}})}),[r,e].forEach(function(e){e.addEventListener("click",function(e){o.classList.remove("active"),r.classList.remove("active"),c.style.overflow="scroll",t.destroy()})})});var swiper=new Swiper(".swiper",{loop:!0,pagination:{el:".swiper-pagination",clickable:!0},navigation:{nextEl:".slider__btn-next",prevEl:".slider__btn-prev"}});function TestDriveFn(){document.getElementById("testdrive").scrollIntoView({block:"start",behavior:"smooth"})}function decisionsFn(){document.getElementById("decisions").scrollIntoView({block:"start",behavior:"smooth"})}function learningFn(){document.getElementById("learning").scrollIntoView({block:"start",behavior:"smooth"})}function trustFn(){document.getElementById("trust").scrollIntoView({block:"start",behavior:"smooth"})}function questionsFn(){document.getElementById("questions").scrollIntoView({block:"start",behavior:"smooth"})}function moreFn(){document.getElementById("form-down-2").scrollIntoView({block:"start",behavior:"smooth"})}var burgerMenu=document.querySelector(".header__burger"),burgerBtn=document.querySelector(".header__burger-btn"),burgerCloseBtn=document.querySelector(".header__cross"),headerCover=document.querySelector(".header__cover"),burgerLinks=document.getElementById("header_links"),upForm=document.querySelector(".header__form"),burgerGetinfo=document.querySelector(".header__form-btn"),closeBurger=(burgerBtn.addEventListener("click",function(e){burgerMenu.classList.contains("header__burger--out")&&burgerMenu.classList.remove("header__burger--out"),burgerMenu.classList.add("header__burger--in"),headerCover.style.display="block",body.style.overflow="hidden",e.stopImmediatePropagation()}),function(){burgerMenu.classList.remove("header__burger--in"),headerCover.style.display="none",body.style.overflow="scroll"}),f_formSucess=(document.addEventListener("click",function(e){var t=e.composedPath().includes(burgerMenu),n=e.composedPath().includes(burgerGetinfo),o=!1,r=e.composedPath().includes(upForm);n&&(burgerMenu.classList.remove("header__burger--in"),upForm.style.display="block"),t||(o=!0),[e.composedPath().includes(burgerCloseBtn),e.composedPath().includes(burgerLinks)].forEach(function(e){e&&closeBurger()}),!0!==o||r||(upForm.style.display="none",closeBurger())}),!1),telSelector=(document.addEventListener("DOMContentLoaded",function(){document.getElementById("form").addEventListener("submit",function(e){var t,n;e.preventDefault(),console.log("submit"),validForm(),console.log(f_formSucess),!0===f_formSucess&&(t=new FormData(e.target),n={},t.forEach(function(e,t){n[t]=e}),fetch("finish.php",{method:"POST",body:JSON.stringify(n),headers:{"Content-type":"application/json; charset=UTF-8"}}).then(function(e){return e.json()}).then(function(e){console.log("Письмо ушло")}),e.target.reset(),f_formSucess=!1)})}),document.getElementById("phone")),nameSelector=document.getElementById("name"),questionSelector=document.getElementById("question"),telValid=new Inputmask({mask:"+*{1,20}",greedy:!1,definitions:{"*":{validator:"[0-9()-]"}}}),validForm=(telValid.mask(telSelector),function(){var e=telSelector.value,t=nameSelector.value,n=questionSelector.value,e=e.replace(/[^0-9]/g,"");document.getElementById("agree").checked?2<e.length&&e.length<50&&1<t.length&&t.length<36&&2<n.length&&n.length<1501?(document.getElementById("warning").style.display="block",document.getElementById("warning").style.color="#49ff0c",document.getElementById("warning").textContent="Спасибо, мы свяжемся с Вами!",setTimeout(function(){closeBurger(),document.getElementById("warning").style.display="none"},2e3),console.log("процесс отправки формы"),setTimeout(function(){document.querySelector(".header__form").style.display="none",headerCover.style.display="none",body.style.overflow="scroll"},2e3),console.log("валидация прошла успешно"),f_formSucess=!0):(console.log("форма не прошла по валидации"),document.getElementById("warning").textContent="Пожалуйста введите правильные данные",document.getElementById("warning").style.display="block"):(console.log("форма не прошла по валидации"),document.getElementById("warning").textContent="Пожалуйста дайте свое согласие на обработку персональных данных",document.getElementById("warning").style.display="block")}),f_formSucess2=!1,telSelector2=(document.addEventListener("DOMContentLoaded",function(){document.getElementById("form-down").addEventListener("submit",function(e){var t,n;e.preventDefault(),console.log("submit"),validForm2(),console.log(f_formSucess2),!0===f_formSucess2&&(t=new FormData(e.target),n={},t.forEach(function(e,t){n[t]=e}),fetch("finish2.php",{method:"POST",body:JSON.stringify(n),headers:{"Content-type":"application/json; charset=UTF-8"}}).then(function(e){return e.json()}).then(function(e){console.log("Письмо ушло")}),e.target.reset(),f_formSucess2=!1)})}),document.getElementById("phone-f")),nameSelector2=document.getElementById("name-f"),questionSelector2=document.getElementById("question-f"),telValid2=new Inputmask({mask:"+*{1,20}",greedy:!1,definitions:{"*":{validator:"[0-9()-]"}}}),validForm2=(telValid2.mask(telSelector2),function(){var e=telSelector2.value,t=nameSelector2.value,n=questionSelector2.value,e=e.replace(/[^0-9]/g,"");document.getElementById("agree-f").checked?2<e.length&&e.length<50&&1<t.length&&t.length<36&&2<n.length&&n.length<1501?(document.getElementById("warning-f").style.display="block",document.getElementById("warning-f").style.color="#49ff0c",document.getElementById("warning-f").textContent="Спасибо, мы свяжемся с Вами!",setTimeout(function(){document.getElementById("warning-f").style.display="none"},2e3),console.log("валидация прошла успешно"),f_formSucess2=!0):(console.log("форма не прошла по валидации"),document.getElementById("warning-f").textContent="Пожалуйста введите правильные данные",document.getElementById("warning-f").style.display="block"):(console.log("форма не прошла по валидации"),document.getElementById("warning-f").textContent="Пожалуйста дайте свое согласие на обработку персональных данных",document.getElementById("warning-f").style.display="block")});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,