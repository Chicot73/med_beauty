@charset "UTF-8";

@font-face {
  font-family: "CocoSharp";
  src: url("../fonts/Coco-Sharp-Bold-trial.eot");
  src: local("CocoSharpBoldtrial"), local("Coco-Sharp-Bold-trial"), url("../fonts/Coco-Sharp-Bold-trial.eot?#iefix") format("embedded-opentype"), url("../fonts/Coco-Sharp-Bold-trial") format("woff"), url("../fonts/Coco-Sharp-Bold-trial") format("truetype");
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: "CocoSharp";
  src: url("../fonts/Coco-Sharp-Regular-trial.eot");
  src: local("CocoSharpRegulartrial"), local("Coco-Sharp-Regular-trial"), url("../fonts/Coco-Sharp-Regular-trial.eot?#iefix") format("embedded-opentype"), url("../fonts/Coco-Sharp-Regular-trial") format("woff"), url("../fonts/Coco-Sharp-Regular-trial") format("truetype");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "Gilroy";
  src: url("../fonts/Gilroy-Regular.eot");
  src: local("Gilroy Regular"), local("Gilroy-Regular"), local("GilroyRegular"), url("../fonts/Gilroy-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Gilroy-Regular") format("woff"), url("../fonts/Gilroy-Regular") format("truetype");
  font-weight: 400;
  font-style: normal;
}

/* $grid-breakpoints: (
    xs: 32em,
    sm: 57.6em,
    md: 76.8em,
    lg: 99.2em,
    xl: 120em,
    xxl: 140em) !default; */

/* $grid-breakpoints-min: (
    xs: 0,
    sm: 57.6rem,
    md: 76.8rem,
    lg: 99.2rem,
    xl: 120rem,
    xxl: 140rem) !default; */

/* @mixin bp($name) {
    @media(max-width: $width) {
        $width: map-get($grid-breakpoints, $name);

        @include media($width) {
            @content;
        }
    }
} 

@mixin bp-min($name) {
    @media(min-width: $width) {
        $width: map-get($grid-breakpoints-min, $name);

        @include media-min($width) {
            @content;
        }
    }
} */

.container {
  margin: 0 auto;
  width: 100%;
  max-width: 146rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

@media (max-width: 87.48em) {
  .container {
    max-width: 126rem;
  }
}

@media (max-width: 74.98em) {
  .container {
    max-width: 102rem;
  }
}

@media (max-width: 61.98em) {
  .container {
    max-width: 78rem;
  }
}

@media (max-width: 47.98em) {
  .container {
    max-width: 66rem;
  }
}

@media (max-width: 35.98em) {
  .container {
    max-width: 48rem;
  }
}

@media (max-width: 19.98em) {
  .container {
    max-width: 30rem;
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -1rem;
  margin-right: -1rem;
}

.row > * {
  width: 100%;
  max-width: 100%;
  margin-top: 1rem;
  margin-left: 1rem;
  margin-right: 1rem;
}

.col {
  flex: 1 0 0%;
}

.col-1 {
  flex: 0 0 auto;
  width: calc(8.3333333333% - 2rem);
}

.col-2 {
  flex: 0 0 auto;
  width: calc(16.6666666667% - 2rem);
}

.col-3 {
  flex: 0 0 auto;
  width: calc(25% - 2rem);
}

.col-4 {
  flex: 0 0 auto;
  width: calc(33.3333333333% - 2rem);
}

.col-5 {
  flex: 0 0 auto;
  width: calc(41.6666666667% - 2rem);
}

.col-6 {
  flex: 0 0 auto;
  width: calc(50% - 2rem);
}

.col-7 {
  flex: 0 0 auto;
  width: calc(58.3333333333% - 2rem);
}

.col-8 {
  flex: 0 0 auto;
  width: calc(66.6666666667% - 2rem);
}

.col-9 {
  flex: 0 0 auto;
  width: calc(75% - 2rem);
}

.col-10 {
  flex: 0 0 auto;
  width: calc(83.3333333333% - 2rem);
}

.col-11 {
  flex: 0 0 auto;
  width: calc(91.6666666667% - 2rem);
}

.col-12 {
  flex: 0 0 auto;
  width: calc(100% - 2rem);
}

@media (max-width: 87.5em) {
  .col-xxl-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 2rem);
  }

  .col-xxl-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 2rem);
  }

  .col-xxl-3 {
    flex: 0 0 auto;
    width: calc(25% - 2rem);
  }

  .col-xxl-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 2rem);
  }

  .col-xxl-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 2rem);
  }

  .col-xxl-6 {
    flex: 0 0 auto;
    width: calc(50% - 2rem);
  }

  .col-xxl-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 2rem);
  }

  .col-xxl-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 2rem);
  }

  .col-xxl-9 {
    flex: 0 0 auto;
    width: calc(75% - 2rem);
  }

  .col-xxl-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 2rem);
  }

  .col-xxl-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 2rem);
  }

  .col-xxl-12 {
    flex: 0 0 auto;
    width: calc(100% - 2rem);
  }
}

@media (max-width: 75em) {
  .col-xl-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 2rem);
  }

  .col-xl-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 2rem);
  }

  .col-xl-3 {
    flex: 0 0 auto;
    width: calc(25% - 2rem);
  }

  .col-xl-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 2rem);
  }

  .col-xl-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 2rem);
  }

  .col-xl-6 {
    flex: 0 0 auto;
    width: calc(50% - 2rem);
  }

  .col-xl-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 2rem);
  }

  .col-xl-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 2rem);
  }

  .col-xl-9 {
    flex: 0 0 auto;
    width: calc(75% - 2rem);
  }

  .col-xl-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 2rem);
  }

  .col-xl-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 2rem);
  }

  .col-xl-12 {
    flex: 0 0 auto;
    width: calc(100% - 2rem);
  }
}

@media (max-width: 62em) {
  .col-lg-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 2rem);
  }

  .col-lg-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 2rem);
  }

  .col-lg-3 {
    flex: 0 0 auto;
    width: calc(25% - 2rem);
  }

  .col-lg-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 2rem);
  }

  .col-lg-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 2rem);
  }

  .col-lg-6 {
    flex: 0 0 auto;
    width: calc(50% - 2rem);
  }

  .col-lg-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 2rem);
  }

  .col-lg-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 2rem);
  }

  .col-lg-9 {
    flex: 0 0 auto;
    width: calc(75% - 2rem);
  }

  .col-lg-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 2rem);
  }

  .col-lg-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 2rem);
  }

  .col-lg-12 {
    flex: 0 0 auto;
    width: calc(100% - 2rem);
  }
}

@media (max-width: 48em) {
  .col-md-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 2rem);
  }

  .col-md-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 2rem);
  }

  .col-md-3 {
    flex: 0 0 auto;
    width: calc(25% - 2rem);
  }

  .col-md-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 2rem);
  }

  .col-md-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 2rem);
  }

  .col-md-6 {
    flex: 0 0 auto;
    width: calc(50% - 2rem);
  }

  .col-md-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 2rem);
  }

  .col-md-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 2rem);
  }

  .col-md-9 {
    flex: 0 0 auto;
    width: calc(75% - 2rem);
  }

  .col-md-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 2rem);
  }

  .col-md-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 2rem);
  }

  .col-md-12 {
    flex: 0 0 auto;
    width: calc(100% - 2rem);
  }
}

@media (max-width: 36em) {
  .col-sm-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 2rem);
  }

  .col-sm-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 2rem);
  }

  .col-sm-3 {
    flex: 0 0 auto;
    width: calc(25% - 2rem);
  }

  .col-sm-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 2rem);
  }

  .col-sm-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 2rem);
  }

  .col-sm-6 {
    flex: 0 0 auto;
    width: calc(50% - 2rem);
  }

  .col-sm-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 2rem);
  }

  .col-sm-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 2rem);
  }

  .col-sm-9 {
    flex: 0 0 auto;
    width: calc(75% - 2rem);
  }

  .col-sm-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 2rem);
  }

  .col-sm-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 2rem);
  }

  .col-sm-12 {
    flex: 0 0 auto;
    width: calc(100% - 2rem);
  }
}

@media (max-width: 20em) {
  .col-xs-1 {
    flex: 0 0 auto;
    width: calc(8.3333333333% - 2rem);
  }

  .col-xs-2 {
    flex: 0 0 auto;
    width: calc(16.6666666667% - 2rem);
  }

  .col-xs-3 {
    flex: 0 0 auto;
    width: calc(25% - 2rem);
  }

  .col-xs-4 {
    flex: 0 0 auto;
    width: calc(33.3333333333% - 2rem);
  }

  .col-xs-5 {
    flex: 0 0 auto;
    width: calc(41.6666666667% - 2rem);
  }

  .col-xs-6 {
    flex: 0 0 auto;
    width: calc(50% - 2rem);
  }

  .col-xs-7 {
    flex: 0 0 auto;
    width: calc(58.3333333333% - 2rem);
  }

  .col-xs-8 {
    flex: 0 0 auto;
    width: calc(66.6666666667% - 2rem);
  }

  .col-xs-9 {
    flex: 0 0 auto;
    width: calc(75% - 2rem);
  }

  .col-xs-10 {
    flex: 0 0 auto;
    width: calc(83.3333333333% - 2rem);
  }

  .col-xs-11 {
    flex: 0 0 auto;
    width: calc(91.6666666667% - 2rem);
  }

  .col-xs-12 {
    flex: 0 0 auto;
    width: calc(100% - 2rem);
  }
}

@font-face {
  font-family: "CocoSharp";
  src: url("../fonts/Coco-Sharp-Bold-trial.eot");
  src: local("CocoSharpBoldtrial"), local("Coco-Sharp-Bold-trial"), url("../fonts/Coco-Sharp-Bold-trial.eot?#iefix") format("embedded-opentype"), url("../fonts/Coco-Sharp-Bold-trial") format("woff"), url("../fonts/Coco-Sharp-Bold-trial") format("truetype");
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: "CocoSharp";
  src: url("../fonts/Coco-Sharp-Regular-trial.eot");
  src: local("CocoSharpRegulartrial"), local("Coco-Sharp-Regular-trial"), url("../fonts/Coco-Sharp-Regular-trial.eot?#iefix") format("embedded-opentype"), url("../fonts/Coco-Sharp-Regular-trial") format("woff"), url("../fonts/Coco-Sharp-Regular-trial") format("truetype");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "Gilroy";
  src: url("../fonts/Gilroy-Regular.eot");
  src: local("Gilroy Regular"), local("Gilroy-Regular"), local("GilroyRegular"), url("../fonts/Gilroy-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Gilroy-Regular") format("woff"), url("../fonts/Gilroy-Regular") format("truetype");
  font-weight: 400;
  font-style: normal;
}

.header {
  border: 0.1rem dashed #1D4ED8;
  background: #DBEAFE;
}

/**
  Нормализация блочной модели
 */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */

:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */

body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */

:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */

:where(ul[class]) {
  list-style: none;
}

/**
  Упрощаем работу с изображениями
 */

li {
  list-style: none;
  padding-left: 0;
}

a,
a:hover {
  text-decoration: none;
  cursor: pointer;
}

input,
button {
  border: none;
  outline: none;
  cursor: pointer;
}

img,
picture {
  width: 100%;
  height: auto;
  object-fit: contain;
}

html,
body {
  font: 10px/1.5 "Gilroy", "Inter", "Roboto", Arial, sans-serif;
}

:root {
  --color-accent: #CD3B31;
  --color-text: #151516;
  --color-gray: #6B7073;
  --color-light-gray: #C4C4C4;
}

html,
body {
  font-size: 10px;
  margin: 0;
}

.row {
  justify-content: center;
  align-items: center;
}

.container {
  position: relative;
}

@supports (-webkit-appearance:none) {

}

@media (max-width: 87.48em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 74.98em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 61.98em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 47.98em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 35.98em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 19.98em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 87.5em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 75em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 62em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 48em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 36em) {
@supports (-webkit-appearance:none) {

}
}

@media (max-width: 20em) {
@supports (-webkit-appearance:none) {

}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */